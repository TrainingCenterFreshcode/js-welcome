// array.concat - використовується для об'єднання двох або більше масивів у новий масив (немутуючий)
// array.fill - використовується для заповнення всіх елементів масиву якимсь одним значенням (мутуючий)
// array.includes - використовується для перевірки наявності певного значення у масиві (немутуючий)
// array.indexOf - використовується для отримання першого входження певного значення у масиві (немутуючий)
// array.join - використовується для створення рядка, об'єднуючи всі елементи масиву (немутуючий)
// array.push - використовується для додавання одного або кількох елементів у кінець (мутуючий)
// array.pop - використовується для видалення останнього елементу (мутуючий)
// array.shift - використовується для видалення першого елементу з початку масиву (мутуючий)
// array.unshift - використовується для додавання одного або декількох елементів на початок масиву (мутуючий)
// array.reverse - використовується для зміни порядку елементів у масиві на протилежний (мутуючий)
// array.slice - використовується для створення нового масиву, який складається тільки з якоїсь певної частини вихідного масиву (немутуючий)
// array.splice - використовується для зміни вмісту масиву шляхом видалення, заміни або додавання нових елементів (мутуючий)
// array.forEach - використовується для перебору (ітерації) кожного елемента масиву і виконання певної дії для кожного елемента
// array.map - працює як forEach, тільки map буде повертати новий масив (не мутуючий)
// array.sort - використовується для сортування елементів в масиві (мутуючий)
// array.filter - використовується для створення нового масиву, який місти лише ті елементи, які задовільняють певній умові (не мутуючий)

// array.reduce - використовується для обчислення якого ОДНОГО значення на основі всіх елементів масиву (не мутуючий)
// reduce - зводить всі елементи масиву до якогось одного результуючого значення
// array.reduce(callback, initialValue)

const numbersArray = [2, 3, 1, 2, 34, 21];

// Задача: знайти суму numbersArray

function reducer(accumulator, item) {
  // те, що повертає reducer - оновлений акумулятор
  return accumulator + item;
}

const sum = numbersArray.reduce(reducer, 0); // 0 - початкове значення, з якого ми починаємо рахувати сумму